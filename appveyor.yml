version: 0.11.0.{build}

image:
  - Visual Studio 2015

environment:
  op_build_user: "jonathanvdc"
  op_build_user_email: "jonathan.vdc@outlook.com"
  access_token:
    secure: g+uq4ZWbxSQPIvxKd2swP1ce1rKaY/OQh6Rn2emgCv3ke5QYt7uILm5JsC8CA9GE

assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

clone_script:
  - cmd: git clone -q --recursive --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
  - cmd: git checkout -qf %APPVEYOR_REPO_COMMIT%

before_build:
  # Install DocFX.
  - choco install docfx -y

build_script:
  # Generate a NuGet package version number.
  - echo %APPVEYOR_REPO_TAG%
  - C:\Python34\python.exe Tools\CI\version-number.py %APPVEYOR_BUILD_VERSION% > pkg-version.txt
  - set /p PKG_VERSION=<pkg-version.txt
  - echo %PKG_VERSION%

  # Get the C# compiler's path and put it in an environment variable.
  - where csc > csc-path.txt
  - set /p CSC_PATH=<csc-path.txt
  - echo %CSC_PATH%
  # Restore NuGet packages.
  - nuget restore Flame.sln
  # Build supporting macros.
  - msbuild /p:Configuration=Release /verbosity:quiet /nologo FlameMacros/FlameMacros.csproj
  # Compile macro applications.
  - C:\cygwin\bin\make dsl RUN_EXE=""
  # Build Flame.
  - msbuild /p:Configuration=Release /verbosity:quiet /nologo Flame.sln
  # Run the tests.
  - UnitTests\bin\Release\UnitTests.exe all "--csc-path=%CSC_PATH%"

after_build:
  # Create NuGet packages
  - nuget pack -Version %PKG_VERSION% Flame.nuspec
  # Build docs using DocFX and deploy them to GitHub pages. (Based on https://github.com/docascode/docfx-seed/blob/master/appveyor.yml)
  - ps: |
        if(-Not $env:APPVEYOR_PULL_REQUEST_TITLE -and $env:APPVEYOR_REPO_BRANCH -eq "master")
        {
            # & nuget install docfx.console -Version 2.18.4 -Source https://www.myget.org/F/docfx/api/v3/index.json
            # & docfx.console.2.18.4\tools\docfx docfx.json
            & docfx Documentation/docfx.json
            if ($lastexitcode -ne 0){
                throw [System.Exception] "docfx build failed with exit code $lastexitcode."
            }

            git config --global credential.helper store
            Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
            git config --global user.email $env:op_build_user_email
            git config --global user.name $env:op_build_user
            git clone https://github.com/$($env:APPVEYOR_REPO_NAME).git -b gh-pages origin_site -q
            Copy-Item origin_site/.git Documentation/_site -recurse
            CD Documentation/_site
            git add -A 2>&1
            git commit -m "CI Updates" -q
            git push origin gh-pages -q
        }

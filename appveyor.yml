version: 0.7.7.{build}

install:
  - curl -L https://github.com/jonathanvdc/Flame/releases/download/v0.7.3/dsc.zip > dsc_binaries.zip
  - 7z x dsc_binaries.zip -obin_dsc
  - git clone https://github.com/jonathanvdc/compare-test
  - nuget restore Flame.Cecil\Flame.Cecil.mono.sln
build_script:
  - set SEMVER=0.7.7
  - echo %APPVEYOR_REPO_TAG%
  # Build packages as SEMVER-ci{build}
  - ps: if ($env:APPVEYOR_REPO_TAG -eq $True) { $env:PKG_VERSION = $env:SEMVER; } else { $env:PKG_VERSION = "$($env:SEMVER)-ci$($env:APPVEYOR_BUILD_NUMBER)"; }
  - echo %PKG_VERSION%

  - set ASM_VERSION=%SEMVER%.%APPVEYOR_BUILD_NUMBER%
  - echo %ASM_VERSION%
  # Perform one build to check that Flame is buildable
  - BuildCI.bat bin_dsc\dsc\dsc.exe
  # Perform a second build to make sure that Flame can bootstrap
  - BuildCI.bat dsc\bin\Release\dsc.exe --asm-version=%ASM_VERSION%

assembly_info:
    patch: true
    file: AssemblyInfo.*
    assembly_version: "{version}"
    assembly_file_version: "{version}"
    assembly_informational_version: "{version}"

after_build:
  # Zip the compiled dsc binaries, and upload them.
  - mkdir dsc_build
  - xcopy dsc\bin\Release\*.dll dsc_build
  - xcopy dsc\bin\Release\*.exe dsc_build
  - 7z a dsc.zip %APPVEYOR_BUILD_FOLDER%\dsc_build\*
  - nuget pack -Version %PKG_VERSION% Flame.Front.nuspec

artifacts:
  - path: dsc.zip
    name: dsc
  - path: '*.nupkg'
    name: nupkgs

deploy:
  - provider: NuGet
    server: https://www.myget.org/F/flame-front/api/v2/package
    api_key:
      secure: SA9j/hvLe5XIZuuFRM3bM+WS5ozrv+hwZQKSWECS6ubwj/ep1vyw/uVEa9s2KKVf
    skip_symbols: true
    artifact: /.*\.nupkg/
    on:
      branch: master # Release from master branch only.

  - provider: NuGet
    server:
    api_key:
      secure: vIYC0UO8DFL2HXrIu20ZQs1NR31SvGZWioDBgXzyMwJEd5dySh5peABsrwWvKzU1
    skip_symbols: true
    artifact: /.*\.nupkg/
    on:
      branch: master # Release from master branch only.
      appveyor_repo_tag: true # Deploy on tag push only.

  - provider: GitHub
    release: dsc v$(SEMVER)
    description: 'Release description' # Fill this out later.
    auth_token:
      secure: 693ZX2DdyyjDOqpJaJlUMO1hcMtLbsqMnCLzQVUEq7JjGb+bfEbaB/oMO0b26KZo
    artifact: dsc.zip # Release the dsc compiler as an artifact.
    draft: true  # Make this a draft.
    prerelease: false
    on:
      branch: master # Release from master branch only.
      appveyor_repo_tag: true # Deploy on tag push only.

test_script:
  # Build compare-test, with -O3, to ensure that aggressive optimizations
  # work for a real-life application. Use --debug to catch some incorrect
  # optimizations at compile-time.
  - dsc\bin\Release\dsc.exe compare-test\src\compare-test.dsproj -O3 --debug
  # Run the tests
  - compare-test\src\bin\compare-test.exe all-tests.test

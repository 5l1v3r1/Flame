init
{
    template RunWasm<filename,runtime>
    {
        run
        {
            _ = @($(wasm-interp) bin/$(filename).wasm --importer $(runtime));
        }

        build
        {
            $(dsc) $(filename) $(flags) -platform ir -o bin/$(filename).flo;
            $(flame-wasm) bin/$(filename).flo $(flags) -platform wasm -o bin/$(filename).wasm;
        }

        configs
        {
            Og { flags = $(flags) -Og; }
            O2 { flags = $(flags) -O2; }
            O3 { flags = $(flags) -O3; }
        }

        init
        {
            flags = -Wno-build;
        }
    }

    template CompileWasm<filename>
    {
        build
        {
            $(dsc) $(filename) $(flags) -platform ir -o bin/$(filename).flo;
            $(flame-wasm) bin/$(filename).flo $(flags) -platform wasm -o bin/$(filename).wasm;
        }

        configs
        {
            Og { flags = $(flags) -Og; }
            O2 { flags = $(flags) -O2; }
            O3 { flags = $(flags) -O3; }
        }

        init
        {
            flags = -Wno-build;
        }
    }
}

tests
{
    Fibonacci/Fibonacci.test;
    Float/Float.test;
    Loop/Loop.test;
    Pointers/Pointers.test;
    Print/Print.test;
    PrintHeapStart/PrintHeapStart.test;
    Static/Static.test;
    Struct/Struct.test;
}

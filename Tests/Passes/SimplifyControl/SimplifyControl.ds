
public static class Tests
{
    public void Once(void() Action)
    {
        while (true)
        {
            Action();
            break;
        }

        // -fsimplify-flow should optimize this to:
        //
        // Action();
    }

    public void Never(void() Action)
    {
        while (false)
        {
            Action();
        }

        // This should always be optimized away, -fsimplify-flow or no.
    }

    public void Forever(bool() Condition)
    {
        do
        {
            if (Condition())
            {
                next;
            }
            break;
        } while (true);

        // -fsimplify-flow should optimize this to:
        //
        // tag: { if (Condition()) continue tag; }
        //
        // which is approximately the same as:
        //
        // do { } while (Condition());
    }

    public void Iterate<T>(void(T) Action, [T] Values)
    {
        foreach (var item in Values)
        {
            while (true)
            {
                Action(item);
                break;
            }
        }

        // -fsimplify-flow should optimize this to:
        //
        // foreach (var item in Values) Action(item);
    }
}

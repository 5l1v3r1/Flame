
public class TestClass
{
    public int NoCoalescing(int x, int y)
    {
        int y2 = y;
        int x2 = x;
        if (x2 < y2)
            x2 = y2;
        return x2 + y2;
    }

    public int Select(bool Condition, int Left, int Right)
    {
        int result = Right;
        if (Condition)
            result = Left;
        // else
        //    result = Right;
        return result;
    }

    public int Loop(int Target)
    {
        int result = 0;
        while (result < Target)
            result++;
        return result;
    }

    public int ConstantPropagation()
    {
        int x = 2;
        int y = 19;
        x = x + y;
        y = x * x;
        return y * y;
    }

    public int CopyPropagation(int arg)
    {
        int x = arg;
        int y = x;
        int z = y;
        return z;
    }

    public int NoStackIntrinsics(int arg)
    {
        int x = arg;
        int y = x;
        int z = y;
        return z * y - arg;
    }

    public int ConvolutedLoop(int x, int y)
    {
        int a, b, c, d, e, f, g;

        a = 3;
        d = 2;

        while (true)
        {
            f = a + d;
            g = 5;
            a = g - d;
            if (f <= g)
            {
                f = g + 1;
            }
            else
            {
                if (g >= a)
                    return f;
            }
            d = 2;
        }
    }
}

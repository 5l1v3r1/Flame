using System;
using System.Collections.Generic;
using System.Text;
using Flame.Build;

namespace Flame.Primitives
{
	public static class NullPrimitiveType : IType
	{
        public int32 Magnitude { const get return 0; }
        public object DefaultValue { const get return null; }
        public string Name { const get return "Null"; }

        public INamespace DeclaringNamespace
        {
            const get return PrimitivesNamespace;
        }

        public [IMethod] Methods
        {
            const get { return new IMethod[0]; }
        }

        public [IProperty] Properties
        {
            const get { return new IProperty[0]; }
        }

        public [IField] Fields
        {
            const get { return new IField[0]; }
        }

        public IBoundObject GetDefaultValue()
        {
            return new BoundPrimitive<object>(this, DefaultValue);
        }

        public [IType] BaseTypes
        {
            const get { return new IType[0]; }
        }

        public string FullName
        {
            get return MemberExtensions.CombineNames(DeclaringNamespace.FullName, Name);
        }

        public AttributeMap Attributes
        {
            const get { return AttributeMap.Empty; }
        }

        #region Generics

        public [IGenericParameter] GenericParameters
        {
            const get { return new IGenericParameter[0]; }
        }

        #endregion

		public IAncestryRules AncestryRules
		{
			const get { return NullAncestryRules; }
		}
    }
}

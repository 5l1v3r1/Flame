using System;
using System.Collections.Generic;
using System.Linq;
using Flame.Build;

namespace Flame.Primitives
{
	public class EqualsImplementation<T> : PrimitiveMethod where T : object
	{
		public const this(set IType DeclaringType)
		{
			this.Name = "Equals";
			this.IsConstructor = false;
			this.ReturnType = PrimitiveTypes.Boolean;
			this.Parameters = new IParameter[] { PrimitiveMethods.Equals.GetParameters()[0] };
			this.BaseMethods = new IMethod[] { PrimitiveMethods.Equals };
		}
		
		public override const IBoundObject Invoke(IBoundObject Target, IEnumerable<IBoundObject> Arguments) : PrimitiveMethod.Invoke
		{
			var primitive = (IBoundPrimitive<T>)Target;
			var arg = (IBoundPrimitive<object>)Enumerable.First<IBoundObject>(Arguments);
			return new BoundPrimitive<bool>(PrimitiveTypes.Boolean, primitive.Value.Equals(arg.Value));
		}
	}
}
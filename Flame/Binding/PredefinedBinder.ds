using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace Flame
{
    public class PredefinedBinder : IBinder
    {
        public const this(set IBinder NormalBinder)
        {
            this.PredefinedTypes = new Dictionary<QualifiedName, IType>();
        }

        public IBinder NormalBinder { const get; private set; }
        public Dictionary<QualifiedName, IType> PredefinedTypes { const get; private set; }

        public void MapType(QualifiedName Name, IType Value)
        {
        	PredefinedTypes[Name] = Value;
        }
        public void MapType(UnqualifiedName Name, IType Value)
        {
            MapType(new QualifiedName(Name), Value);
        }
        public void MapType(string Name, IType Value)
        {
            MapType(new SimpleName(Name), Value);
        }

        public IEnvironment Environment
        {
            get { return NormalBinder.Environment; }
        }

        public IType BindType(QualifiedName Name)
        {
            if (PredefinedTypes.TryGetValue(Name, &IType result))
                return result;
            else
                return NormalBinder.BindType(Name);
        }

        public [IType] GetTypes()
        {
            return Enumerable.Concat<IType>(PredefinedTypes.Values, NormalBinder.GetTypes());
        }
    }
}

using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Build
{
    public class PointerType : ContainerTypeBase, IPointerType
    {
        public const this(IType ElementType, set PointerKind PointerKind)
            : base(ElementType);

        public PointerKind PointerKind { const get; private set; }

        protected override string GetName(string ElementName)
        {
            return ElementName + PointerKind.Extension;
        }

        public override ContainerTypeKind ContainerKind
        {
            const get { return ContainerTypeKind.Pointer; }
        }

        public override bool Equals(object obj)
        {
            if (obj is IPointerType)
            {
                var ptrType = (IPointerType)obj;
                if (ptrType.IsPointer && ptrType.PointerKind == PointerKind)
                {
                    var elemType = ptrType.GetElementType();
                    return ElementType.Equals(elemType);
                }
            }
            return false;
        }

        public override int GetHashCode()
        {
            return ElementType.GetHashCode() + PointerKind.GetHashCode();
        }
    }
}

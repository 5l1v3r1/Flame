using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Build
{
	public virtual class TypeTransformerBase : TypeConverterBase<IType>
	{
		public const this();
		
		protected override virtual const IType MakePointerType(IType ElementType, PointerKind Kind)
		{
			return ElementType.MakePointerType(Kind);
		}
		
		protected override virtual const IType MakeArrayType(IType ElementType, int ArrayRank)
		{
			return ElementType.MakeArrayType(ArrayRank);
		}
		
		protected override virtual const IType MakeVectorType(IType ElementType, int[] Dimensions)
		{
			return ElementType.MakeVectorType(Dimensions);
		}
		
		protected override virtual const IType MakeGenericType(IType GenericDeclaration, [IType] TypeArguments)
		{
			return GenericDeclaration.MakeGenericType(TypeArguments);
		}
		
		protected override virtual const IType ConvertTypeDefault(IType Type)
		{
			return Type;
		}
	}
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Flame
{
    /// <summary>
    /// Defines a poiner name: a qualified name that is turned into a pointer.
    /// </summary>
    public class PointerName : UnqualifiedName, IEquatable<PointerName>
    {
        /// <summary>
        /// Creates a new pointer name from the given qualified name and pointer type.
        /// </summary>
        public const this(set QualifiedName ElementName, set PointerKind Kind);

        /// <summary>
        /// Gets the qualified name that is turned into a pointer.
        /// </summary>
        public QualifiedName ElementName { get; private set; }

        /// <summary>
        /// Gets this pointer name's pointer kind.
        /// </summary>
        public PointerKind Kind { get; private set; }

        public override string ToString()
        {
            return ElementName.ToString() + Kind.ToString();
        }

        public override bool Equals(PointerName Other)
        {
            return ElementName.Equals(Other.ElementName)
                && Kind == Other.Kind;
        }
        public override bool Equals(UnqualifiedName Other)
        {
            return Other is PointerName && Equals((PointerName)Other);
        }
        public override int GetHashCode()
        {
            return ElementName.GetHashCode() ^ (Kind.GetHashCode() << 8);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Flame
{
    /// <summary>
    /// Defines an array name: an unqualified name that is turned into an array.
    /// </summary>
    public class ArrayName : UnqualifiedName, IEquatable<ArrayName>
    {
        /// <summary>
        /// Creates a new array name from the given unqualified name and array rank.
        /// </summary>
        public const this(set UnqualifiedName Name, set int Rank);

        /// <summary>
        /// Gets the unqualified name that is turned into a pointer.
        /// </summary>
        public UnqualifiedName Name { get; private set; }

        /// <summary>
        /// Gets this array name's rank.
        /// </summary>
        public int Rank { get; private set; }

        public override string ToString()
        {
            var sb = new StringBuilder(Name.ToString());
            sb.Append('[');
            for (int i = 1; i < Rank; i++)
                sb.Append(',');
            sb.Append(']');
            return sb.ToString();
        }

        public override bool Equals(ArrayName Other)
        {
            return Name == Other.Name
                && Rank == Other.Rank;
        }
        public override bool Equals(UnqualifiedName Other)
        {
            return Other is ArrayName && Equals((ArrayName)Other);
        }
        public override int GetHashCode()
        {
            return Name.GetHashCode() ^ (Rank.GetHashCode() << 16);
        }
    }
}

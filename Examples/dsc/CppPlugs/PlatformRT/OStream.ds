using Flame.RT;
using System.Collections;
using System.Collections.Generic;

namespace std
{
    [Header("ostream")]
    [ReferencePointer("&")]
    public abstract class ostream
    {
        public abstract ostream operator<<(char Value);
        public virtual ostream operator<<(string Value)
        {
            for (int i = 0; i < Value.Length; i++)
            {
                this << Value[i];
            }
            return this;
        }
        public virtual ostream operator<<(double Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(float Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(int Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(long Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(short Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(sbyte Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(uint Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(ulong Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(ushort Value)
        {
            return this << (string)Value;
        }
        public virtual ostream operator<<(byte Value)
        {
            return this << (string)Value;
        }
    }
}
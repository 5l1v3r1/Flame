using Flame.RT;
using System.Collections.Generic;

namespace std
{
    [Header("list")]
    public struct list<T>
    {
        public const this()
        {
            this.data = new LinkedList<T>();
        }

        private LinkedList<T> data;

        public const T first()
        {
            return data.First.Value;
        }
        public const T last()
        {
            return data.Last.Value;
        }

        public const bool empty() return size() == 0;
        public const int size() return data.Count;
        public const int max_size() return int32.MaxValue;

        public void push_back(T Value)
        {
            data = new LinkedList<T>(data);
            data.AddLast(Value);
        }
        
        public void pop_back()
        {
            data = new LinkedList<T>(data);
            data.RemoveLast();
        }

        public void push_front(T Value)
        {
            data = new LinkedList<T>(data);
            data.AddFirst(Value);
        }
        
        public void pop_front()
        {
            data = new LinkedList<T>(data);
            data.RemoveFirst();
        }
    }
}
using Flame.RT;
alias SysMath = System.Math;

namespace std
{
    [Header("cmath")]
    [GlobalType]
    public static class cmath
    {
        // This constant field is not a member of <cmath>, but it is useful.
        // dsc will almost certainly inline this field, so it is unlikely that we'll ever see "std::pi" in the wild.
        public const double pi = 3.1415926535897931;

        // This constant field is not a member of <cmath>, but it is useful.
        // dsc will almost certainly inline this field, so it is unlikely that we'll ever see "std::e" in the wild.
        public const double e = 2.7182818284590452354;

        public const double sin(double Value)
        {
            return SysMath.Sin(Value);
        }
        public const float sin(float Value)
        {
            return (float)SysMath.Sin(Value);
        }

        public const double asin(double Value)
        {
            return SysMath.Asin(Value);
        }
        public const float asin(float Value)
        {
            return (float)SysMath.Asin(Value);
        }

        public const double cos(double Value)
        {
            return SysMath.Cos(Value);
        }
        public const float cos(float Value)
        {
            return (float)SysMath.Cos(Value);
        }

        public const double acos(double Value)
        {
            return SysMath.Acos(Value);
        }
        public const float acos(float Value)
        {
            return (float)SysMath.Acos(Value);
        }

        public const double tan(double Value)
        {
            return SysMath.Tan(Value);
        }
        public const float tan(float Value)
        {
            return (float)SysMath.Tan(Value);
        }

        public const double atan(double Value)
        {
            return SysMath.Atan(Value);
        }
        public const float atan(float Value)
        {
            return (float)SysMath.Atan(Value);
        }

        public const double sqrt(double Value)
        {
            return SysMath.Sqrt(Value);
        }
        public const float sqrt(float Value)
        {
            return (float)SysMath.Sqrt(Value);
        }

        public const double hypot(double x, double y)
        {
            return sqrt(x * x + y * y);
        }
        public const float hypot(float x, float y)
        {
            return sqrt(x * x + y * y);
        }

        public const double pow(double Base, double Exponent)
        {
            return SysMath.Pow(Base, Exponent);
        }
        public const float pow(float Base, float Exponent)
        {
            return (float)SysMath.Pow(Base, Exponent);
        }

        public const double log(double Value)
        {
            return SysMath.Log(Value);
        }
        public const float log(float Value)
        {
            return (float)SysMath.Log(Value);
        }

        public const double log10(double Value)
        {
            return SysMath.Log10(Value);
        }
        public const float log10(float Value)
        {
            return (float)SysMath.Log10(Value);
        }

        public const double log2(double Value)
        {
            return SysMath.Log(Value, 2);
        }
        public const float log2(float Value)
        {
            return (float)SysMath.Log(Value, 2);
        }

        public const double floor(double Value)
        {
            return SysMath.Floor(Value);
        }
        public const float floor(float Value)
        {
            return (float)SysMath.Floor(Value);
        }

        public const double ceil(double Value)
        {
            return SysMath.Ceiling(Value);
        }
        public const float ceil(float Value)
        {
            return (float)SysMath.Ceiling(Value);
        }

        public const double trunc(double Value)
        {
            return SysMath.Truncate(Value);
        }
        public const float trunc(float Value)
        {
            return (float)SysMath.Truncate(Value);
        }

        public const double abs(double Value)
        {
            return SysMath.Abs(Value);
        }
        public const float abs(float Value)
        {
            return (float)SysMath.Abs(Value);
        }
        public const sbyte abs(sbyte Value)
        {
            return SysMath.Abs(Value);
        }
        public const short abs(short Value)
        {
            return SysMath.Abs(Value);
        }
        public const int abs(int Value)
        {
            return SysMath.Abs(Value);
        }
        public const long abs(long Value)
        {
            return SysMath.Abs(Value);
        }
    }
}

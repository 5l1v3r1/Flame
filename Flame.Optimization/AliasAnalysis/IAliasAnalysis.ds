using Flame.Compiler;

namespace Flame.Optimization.AliasAnalysis
{
    /// <summary>
    /// A common interface for alias analyses.
    /// </summary>
    public interface IAliasAnalysis
    {
        /// <summary>
        /// Computes the aliasing relationship between the given expressions.
        /// </summary>
        Aliasing GetAliasing(IExpression First, IExpression Second);
    }

    public static class AliasAnalysisExtensions
    {
        /// <summary>
        /// Checks if the given expressions definitely point to the same value.
        /// </summary>
        public static bool AreAliases(
            this IAliasAnalysis Analysis, IExpression First, IExpression Second)
        {
            return Analysis.GetAliasing(First, Second) == Aliasing.Alias;
        }

        /// <summary>
        /// Checks if the given expressions may point to the same value or
        /// definitely point to the same value.
        /// </summary>
        public static bool MayAlias(
            this IAliasAnalysis Analysis, IExpression First, IExpression Second)
        {
            var result = Analysis.GetAliasing(First, Second);
            return result == Aliasing.MayAlias || result == Aliasing.Alias;
        }

        /// <summary>
        /// Checks if the given expressions definitely don't point to the same
        /// value.
        /// </summary>
        public static bool AreNotAliases(
            this IAliasAnalysis Analysis, IExpression First, IExpression Second)
        {
            return Analysis.GetAliasing(First, Second) == Aliasing.NoAlias;
        }
    }
}

using Flame.Compiler;
using Flame.Compiler.Variables;

namespace Flame.Optimization.Variables
{
    /// <summary>
    /// Defines a type for local variable definitions.
    /// </summary>
    public class LocalVariableDefinition : IVariableDefinition
    {
        /// <summary>
        /// Creates a new local variable definition from the given variable.
        /// </summary>
        public const this(set IUnmanagedVariable Variable);

        /// <summary>
        /// Gets this variable definition's underlying variable.
        /// </summary>
        public IUnmanagedVariable Variable { const get; private set; }

        /// <summary>
        /// Creates a get-expression for this local variable definition.
        /// </summary>
        public IExpression CreateGetExpression()
        {
            return Variable.CreateGetExpression();
        }

        /// <summary>
        /// Has this variable definition "react" to definition access metrics.
        /// </summary>
        public VariableDefinitionReach UseMetrics(VariableDefinitionReach ReactingReach,
                                                  AccessBounds Bounds)
        {
            return ReactingReach; // Copy variable definitions are not interested
                                  // in access metrics.
        }

        /// <summary>
        /// Has this variable definition "react" to a change in another definition's chain:
        /// it gets an opportunity to use the other variable's previous value.
        /// Either this variable definition reach or a newly created one is then returned.
        /// </summary>
        public VariableDefinitionReach ReactTo(VariableDefinitionReach ReactingReach,
                                               VariableDefinitionReach ActingDefinition,
                                               InsertStatement PreInsert)
        {
            return ReactingReach;
        }
    }
}

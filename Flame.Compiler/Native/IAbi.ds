
namespace Flame.Compiler.Native
{
    /// <summary>
    /// Defines common functionality for application binary interfaces.
    /// </summary>
    public interface IAbi
    {
        /// <summary>
        /// Gets the given type's memory data layout.
        /// </summary>
        DataLayout GetLayout(IType Type);
    }

    /// <summary>
    /// A common interface for ABIs that can manipulate the stack.
    /// </summary>
    public interface IStackAbi : IAbi
    {
        /// <summary>
        /// Writes a prologue for the given method.
        /// </summary>
        IStatement GetPrologue(IMethod Method);

        /// <summary>
        /// Gets the address of the stack slot at the given offset.
        /// </summary>
        IExpression GetStackSlotAddress(IExpression Offset);

        /// <summary>
        /// Allocates the given number of bytes on the stack.
        /// </summary>
        IStatement StackAllocate(IExpression Size);

        /// <summary>
        /// Deallocates the given number of bytes from the stack.
        /// </summary>
        IStatement StackRelease(IExpression Size);

        /// <summary>
        /// Writes an epilogue for the given method.
        /// </summary>
        IStatement GetEpilogue(IMethod Method);

        /// <summary>
        /// Creates a direct call to the given method. A 'this' pointer and
        /// a sequence of arguments are given.
        /// </summary>
        IExpression CreateDirectCall(
            IMethod Target, IExpression ThisPointer, [IExpression] Arguments);
    }
}

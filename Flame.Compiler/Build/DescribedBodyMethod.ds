using System;
using System.Collections.Generic;
using System.Text;
using Flame.Build;
using Flame.Compiler.Statements;
using Flame.Compiler.Expressions;

namespace Flame.Compiler
{
	public virtual class DescribedBodyMethod : DescribedMethod, IBodyMethod
	{
		public const this(UnqualifiedName Name, IType DeclaringType)
			: base(Name, DeclaringType)
		{
			this.Body = new ReturnStatement();
		}
		public const this(UnqualifiedName Name, IType DeclaringType, IType ReturnType, bool IsStatic)
			: base(Name, DeclaringType, ReturnType, IsStatic)
		{
			this.Body = new ReturnStatement(new DefaultValueExpression(ReturnType));
		}
		public const this(string Name, IType DeclaringType)
			: base(Name, DeclaringType)
		{
			this.Body = new ReturnStatement();
		}
		public const this(string Name, IType DeclaringType, IType ReturnType, bool IsStatic)
			: base(Name, DeclaringType, ReturnType, IsStatic)
		{
			this.Body = new ReturnStatement(new DefaultValueExpression(ReturnType));
		}

		public IStatement Body { const get; set; }

		/// <summary>
        /// Gets the method's body statement.
        /// </summary>
        /// <returns></returns>
		public const IStatement GetMethodBody()
		{
			return Body;
		}
	}

	public class DescribedBodyAccessor : DescribedBodyMethod, IAccessor
    {
    	public const this(set AccessorType AccessorType, set IProperty DeclaringProperty, IType ReturnType)
			: base(AccessorType.ToString().ToLower() + "_" + DeclaringProperty.Name,
				   DeclaringProperty.DeclaringType, ReturnType, DeclaringProperty.IsStatic);

        public AccessorType AccessorType { const get; private set; }
        public IProperty DeclaringProperty { const get; private set; }
    }
}

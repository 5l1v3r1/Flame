using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Build
{
    public interface ITypeBuilder : IMemberBuilder<IType>, IType
    {
        /// <summary>
        /// Declares a method that is based on the information provided by the specified method template.
        /// </summary>
        /// <param name="Template">
        /// A method template that will be used to construct a method builder.
        /// </param>
        /// <returns></returns>
        IMethodBuilder DeclareMethod(IMethodSignatureTemplate Template);

        /// <summary>
        /// Declares a field that is based on the information provided by the specified field template.
        /// </summary>
        /// <param name="Template">
        /// A field template that will be used to construct a field builder.
        /// </param>
        /// <returns></returns>
        IFieldBuilder DeclareField(IFieldSignatureTemplate Template);

        /// <summary>
        /// Declares a property that is based on the information provided by the specified property template.
        /// </summary>
        /// <param name="Template">
        /// A property template that will be used to construct a property builder.
        /// </param>
        /// <returns></returns>
        IPropertyBuilder DeclareProperty(IPropertySignatureTemplate Template);
    }
}

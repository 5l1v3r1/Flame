using System;
using System.Collections.Generic;
using Flame.Compiler.Variables;

namespace Flame.Compiler.Statements
{
    public class LateBoundVariableSetStatement : VariableSetStatementBase<ILateBoundVariable>
    {
        public const this(set ILateBoundVariable Variable, set IExpression Value);

        public override const IStatement Optimize()
        {
            return new LateBoundVariableSetStatement(Variable, Value.Optimize());
        }

        public override void Emit(IBlockGenerator Generator)
        {
            if (!Variable.IsBound)
            {
                Variable.BindVariable(Generator.CodeGenerator);
            }
            Variable.BoundVariable.CreateSetStatement(Value).Emit(Generator);
        }
    }
    public class LateBoundVariableReleaseStatement : VariableReleaseStatementBase<ILateBoundVariable>
    {
        public const this(set ILateBoundVariable Variable);

        public override void Emit(IBlockGenerator Generator)
        {
            if (Variable.IsBound)
            {
                Variable.BoundVariable.CreateReleaseStatement().Emit(Generator);
            }
        }
    }
}
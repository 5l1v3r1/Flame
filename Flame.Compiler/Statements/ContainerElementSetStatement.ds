using System;
using System.Collections.Generic;
using System.Linq;
using Flame.Compiler.Variables;
using Flame.Compiler.Expressions;

namespace Flame.Compiler.Statements
{
    public class ContainerElementSetStatement : VariableSetStatementBase<ElementVariable>
    {
        public this(set ElementVariable Variable, set IExpression Value);

        public override IStatement Accept(INodeVisitor Visitor)
        {
            var elemVar = Variable.Accept(Visitor);
            var transVal = Visitor.Visit(Value);

            if (elemVar == Variable && transVal == Value)
            {
                return this;
            }
            else
            {
                return new ContainerElementSetStatement(elemVar, transVal);
            }
        }

        public override ICodeBlock Emit(ICodeGenerator Generator)
        {
        	var target = Variable.Target.Emit(Generator);
        	var indexArgs = Variable.IndexArguments.EmitAll(Generator);
            var variable = Generator.GetElement(target, indexArgs);
            return variable.EmitSet(Value.Emit(Generator));
        }
    }
}

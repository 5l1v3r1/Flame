using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler.Emit;

namespace Flame.Compiler.Statements
{
	public class AssertStatement : IStatement
	{
		public const this(set IExpression Expression);

		public IExpression Expression { const get; private set; }

		public bool IsEmpty
		{
			const get
			{
				if (Expression.IsConstant)
			 	{
					var evalExpr = Expression.Evaluate();
					if (evalExpr != null)
					{
						return evalExpr.GetValue<bool>();
					}
				}
				return false;
			}
		}

		public const IStatement Optimize()
		{
			var optAssert = new AssertStatement(Expression.Optimize());
			if (optAssert.IsEmpty)
			{
				return new EmptyStatement();
			}
			return optAssert;
		}

		public void Emit(IBlockGenerator Generator)
		{
			var cg = (IExceptionCodeGenerator)Generator.CodeGenerator;
			var expr = Expression.Emit(cg);
			Generator.EmitBlock(cg.EmitAssert(expr));
		}
	}
}

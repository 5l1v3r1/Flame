using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Expressions
{
    public class GreaterThanExpression : ConditionalExpression
    {
        public const this(set IExpression LeftOperand, set IExpression RightOperand);

        public override const IBoundObject Evaluate()
        {
            return null;
        }

        public override const IExpression Optimize()
        {
            var optA = LeftOperand.Optimize();
            var optB = RightOperand.Optimize();
            return new GreaterThanExpression(optA, optB);
        }

        public override const ICodeBlock Emit(ICodeGenerator Generator)
        {
            return Generator.EmitGreaterThan(LeftOperand.Emit(Generator), RightOperand.Emit(Generator));
        }
    }
    
    public class GreaterThanOrEqualsExpression : ConditionalExpression
    {
        public const this(set IExpression LeftOperand, set IExpression RightOperand);

        public override const IBoundObject Evaluate()
        {
            return null;
        }

        public override const IExpression Optimize()
        {
            var optA = LeftOperand.Optimize();
            var optB = RightOperand.Optimize();
            return new GreaterThanOrEqualsExpression(optA, optB);
        }

        public override const ICodeBlock Emit(ICodeGenerator Generator)
        {
            return Generator.EmitGreaterThanOrEquals(LeftOperand.Emit(Generator), RightOperand.Emit(Generator));
        }
    }
}
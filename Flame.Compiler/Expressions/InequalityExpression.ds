using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Expressions
{
    public class InequalityExpression : ConditionalExpression
    {
        public const this(set IExpression LeftOperand, set IExpression RightOperand);

        protected override Operator GetOperator() { return Operator.CheckInequality; }

        public override bool IsConstant
        {
            override const get
            {
                return LeftOperand.IsConstant && RightOperand.IsConstant;
            }
        }

        public override const IBoundObject Evaluate()
        {
            var first = LeftOperand.Evaluate();
            var second = RightOperand.Evaluate();
            return !EqualityExpression.CheckObjectEquality(first, second);
        }

        public override const IExpression Optimize()
        {
            var optA = LeftOperand.Optimize();
            var optB = RightOperand.Optimize();
            return new InequalityExpression(optA, optB);
        }

        protected override const ICodeBlock EmitPrimitive(ICodeBlock Left, ICodeBlock Right, ICodeGenerator Generator)
        {
            return Generator.EmitNotEquals(Left, Right);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Expressions
{
    /// <summary>
    /// Defines a type of expression that ascertains if its operands
    /// are not equal.
    /// </summary>
    public class InequalityExpression : ConditionalExpression
    {
        public const this(IExpression LeftOperand, IExpression RightOperand)
            : base(LeftOperand, RightOperand);

        public override Operator Op { override const get { return Operator.CheckInequality; } }

        public override const IBoundObject Evaluate()
        {
            var first = LeftOperand.Evaluate();
            var second = RightOperand.Evaluate();
            var eqObj = EqualityExpression.CheckObjectEquality(first, second);
            if (eqObj == null)
                return eqObj;
            else
                return new BooleanExpression(!eqObj.GetValue<bool>());
        }

        protected override const ICodeBlock EmitPrimitive(ICodeBlock Left, ICodeBlock Right, ICodeGenerator Generator)
        {
            return Generator.EmitNotEquals(Left, Right);
        }

        protected override IExpression Create(IExpression Left, IExpression Right)
        {
            return new InequalityExpression(Left, Right);
        }
    }
}

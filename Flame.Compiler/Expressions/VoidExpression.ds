using System;
using System.Collections.Generic;
using System.Linq;

namespace Flame.Compiler.Expressions
{
	/// <summary>
	/// The void expression singleton, which is a constant expression of type `void`.
	/// </summary>
	public static class VoidExpression : IExpression, IBoundObject
	{
		public IType Type
        {
            const get return PrimitiveTypes.Void;
        }

        public const IExpression Accept(INodeVisitor Visitor)
        {
            return this;
        }

        public const IExpression Optimize()
        {
            return this;
        }

        public bool IsConstant { const get return true; }

        public const IBoundObject Evaluate()
        {
            return this;
        }

		public ICodeBlock Emit(ICodeGenerator Generator)
		{
			return Generator.EmitVoid();
		}

        public void SetField(IField Field, IBoundObject Value)
        {

        }

        public const IBoundObject GetField(IField Field)
        {
            return null;
        }

		public override const string ToString()
		{
			return "void";
		}
	}
}

using System;
using System.Collections.Generic;

namespace Flame.Compiler.Expressions
{
    public class Bit8Expression : ConstantExpression<bit8>
	{
		public this(set bit8 Value);
		
		public IType Type { const get return PrimitiveTypes.Bit8; }
		
		public ICodeBlock Emit(ICodeGenerator Generator)
		{
			return Generator.EmitBit8(Value);
		}
	}
    public class Bit16Expression : ConstantExpression<bit16>
	{
		public this(set bit16 Value);
		
		public IType Type { const get return PrimitiveTypes.Bit16; }
		
		public ICodeBlock Emit(ICodeGenerator Generator)
		{
			return Generator.EmitBit16(Value);
		}
	}
    public class Bit32Expression : ConstantExpression<bit32>
	{
		public this(set bit32 Value);
		
		public IType Type { const get return PrimitiveTypes.Bit32; }
		
		public ICodeBlock Emit(ICodeGenerator Generator)
		{
			return Generator.EmitBit32(Value);
		}
	}
	public class Bit64Expression : ConstantExpression<bit64>
	{
		public this(set bit64 Value);
		
		public IType Type { const get return PrimitiveTypes.Bit64; }
		
		public ICodeBlock Emit(ICodeGenerator Generator)
		{
			return Generator.EmitBit64(Value);
		}
	}
}
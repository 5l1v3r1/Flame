using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Flame.Compiler.Variables;

namespace Flame.Compiler.Expressions
{
	public class PropertyGetExpression : ComplexExpressionBase, IVariableNode,
										 IPredicateNode
	{
		public const this(set PropertyVariable Variable);

		public PropertyVariable Variable { const get; private set; }
		public VariableNodeAction Action { const get return VariableNodeAction.Get; }

		public const IVariable GetVariable()
		{
			return Variable;
		}

		protected override const IExpression Lower()
		{
			return new InvocationExpression(Variable.GetAccessor, Variable.Caller, Variable.IndexerArguments);
		}

		public void AcceptPredicate(INodeVisitor Visitor)
		{
			Variable.AcceptPredicate(Visitor);
		}
	}
}

using System;
using System.Collections.Generic;

namespace Flame.Compiler
{
    /// <summary>
    /// Provides extensions for method groups:
    /// groups of methods that are contained in an expression.
    /// </summary>
    public static class MethodGroupExtensions
    {
        /// <summary>
        /// Gets the method group contained in this expression.
        /// </summary>
        public static const [IMethod] GetMethodGroup(this IExpression Expression)
        {
            return MethodType.GetIntersectedMethods(Expression.Type);
        }

        /// <summary>
        /// Gets an expression's delegate parameter types.
        /// </summary>
        public static const [IType] GetDelegateParameterTypes(this IExpression Expression)
        {
            if (Expression is IDelegateExpression)
            {
                return ((IDelegateExpression)Expression).ParameterTypes;
            }
            else
            {
                var method = MethodType.GetMethod(Expression.Type);
                if (method == null)
                {
                    return null;
                }
                else return method.GetParameters().GetTypes();
            }
        }
    }
}

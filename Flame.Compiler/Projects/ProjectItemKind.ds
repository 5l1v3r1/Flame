using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Projects
{
    public struct ProjectItemKind
    {
        private this(set int32 typeIndex);
        public this(ProjectItemKind Other)
        {
            this.typeIndex = Other.typeIndex;
        }

        private int32 typeIndex;

        #region Equality

        public override int32 GetHashCode()
        {
 	         return typeIndex.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj is ProjectItemKind)
            {
                return ((ProjectItemKind)obj).typeIndex == typeIndex;
            }
            else
            {
                return false;
            }
        }

        /*public static bool operator ==(AccessorType A, AccessorType B)
        {
            return A.typeIndex == B.typeIndex;
        }
        public static bool operator !=(AccessorType A, AccessorType B)
        {
            return A.typeIndex != B.typeIndex;
        }*/

        #endregion

        #region ToString

        public override string ToString()
        {
            return typeNames[typeIndex];
        }

        #endregion

        #region Static

        #region Management

        static this()
        {
            typeNames = new List<string>();
            Register("Node");
            Register("Source");
            Register("Reference");
            Register("RuntimeLibrary");
        }

        private static List<string> typeNames;

        public static ProjectItemKind Register(string Name)
        {
            typeNames.Add(Name);
            return new ProjectItemKind(typeNames.Count - 1);
        }

        #endregion

        #region Common Accessors

        public static ProjectItemKind NodeItem
        {
            get
            {
                return new ProjectItemKind(0);
            }
        }

        public static ProjectItemKind SourceItem
        {
            get
            {
                return new ProjectItemKind(1);
            }
        }
        
        public static ProjectItemKind ReferenceItem
        {
            get
            {
                return new ProjectItemKind(2);
            }
        }
        
        public static ProjectItemKind RuntimeLibraryItem
        {
            get
            {
                return new ProjectItemKind(3);
            }
        }

        #endregion

        #endregion
    }
}
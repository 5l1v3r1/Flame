using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler.Emit;
using Flame.Compiler.Statements;
using Flame.Compiler.Expressions;

namespace Flame.Compiler.Variables
{
	public class ReturnValueVariable : IVariable
	{
		public const this(set IType Type);

		public IType Type { const get; private set; }

		public ReturnValueVariable ConvertType(MemberConverter Converter)
		{
			var resultType = Converter.Convert(Type);
			if (object.ReferenceEquals(resultType, Type))
			{
				return this;
			}
			else return new ReturnValueVariable(resultType);
		}

		public const IExpression CreateGetExpression()
		{
			return new ReturnValueGetExpression(Type);
		}

		public const IStatement CreateSetStatement(IExpression Value)
		{
			return null;
		}

		public const IStatement CreateReleaseStatement()
		{
			return EmptyStatement;
		}

		public override const int GetHashCode()
		{
			return 1;
		}
		public override const bool Equals(object Other)
		{
			return Other is ReturnValueVariable;
		}
	}
}

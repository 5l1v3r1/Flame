using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Compiler.Variables
{
    public class MethodParameterProvider : IVariableProvider
    {
        public const this(set IMethod Method);

        public IMethod Method { const get; private set; }

        public const IVariable GetVariable(string Name)
        {
            var parameters = Method.GetParameters();
            for (int i = 0; i < parameters.Length; i++)
            {
                if (parameters[i].Name.ToString().Equals(Name))
                {
                    return new ArgumentVariable(parameters[i], i);
                }
            }
            return null;
        }

        public const bool VariableExists(string Name)
        {
            foreach (var item in Method.GetParameters())
            {
                if (item.Name.ToString().Equals(Name))
                {
                    return true;
                }
            }
            return false;
        }
    }
}

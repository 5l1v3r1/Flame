using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler.Expressions;
using Flame.Compiler.Statements;

namespace Flame.Compiler.Variables
{
    /// <summary>
    /// Describes a variable that has a constant value which may be evaluated at compile time by get expressions.
    /// This value is also assumed to be stored in the underlying variable object once get expressions or address-of expressions are created.
    /// Essentially, substituting variable access for value access should not have a result on the program's output.
    /// This is a useful property for certain optimizations.
    /// </summary>
    public class ConstantVariable : IUnmanagedVariable
    {
        public const this(set IVariable Variable, set IExpression Value);
        
        public IVariable Variable { const get; private set; }
        public IExpression Value { const get; private set; }

        public IType Type { const get return Variable.Type; }

        public const IExpression CreateGetExpression()
        {
            return new ConstantVariableGetExpression(this);
        }

        public const IStatement CreateSetStatement(IExpression Value)
        {
            return Variable.CreateSetStatement(Value);
        }

        public const IExpression CreateAddressOfExpression()
        {
            return ((IUnmanagedVariable)Variable).CreateAddressOfExpression();
        }

        public const IStatement CreateReleaseStatement()
        {
            return Variable.CreateReleaseStatement();
        }
    }
}
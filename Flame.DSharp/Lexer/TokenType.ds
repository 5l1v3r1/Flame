using System;
using System.Collections.Generic;

namespace Flame.DSharp.Lexer
{
    #region TokenType

    /// <summary>
    /// Tokens is an enumeration of all possible token values.
    /// </summary>
    public enum TokenType : int32
    {
        EndOfFile = -1,
        UNDEFINED = 0,
        Semicolon = 1,
        ColonColon = 2,
        Colon = 3,
        DescriptionComment = 4,
        LineComment = 5,
        BigComment = 6,
        PreprocessorDirective = 7,
        String = 8, // string parsing
        Char = 9,
        Float32 = 10, // 32-bit floating point numbers
        Float64 = 11, // 64-bit floating-point numbers
        HexInteger = 12,
        BinaryInteger = 13,
        FalseLiteral = 14,
        TrueLiteral = 15,
        UsingKeyword = 16,
        VarKeyword = 17,
        SetKeyword = 18,
        IsKeyword = 19,
        AsKeyword = 20,
        IfKeyword = 21,
        ElseKeyword = 22,
        WhileKeyword = 23,
        WhereKeyword = 24,
        SizeOfKeyword = 25,
        ForeachKeyword = 26,
        ForKeyword = 27,
        ReturnKeyword = 28,
        NewKeyword = 29,
        TryKeyword = 30,
        CatchKeyword = 31,
        FinallyKeyword = 32,
        DefaultKeyword = 33,
        NamespaceKeyword = 34,
        ClassKeyword = 35,
        StructKeyword = 36,
        InterfaceKeyword = 37,
        EnumKeyword = 38,
        PublicKeyword = 39,
        ProtectedKeyword = 40,
        AssemblyKeyword = 41,
        PrivateKeyword = 42,
        AbstractKeyword = 43,
        VirtualKeyword = 44,
        OverrideKeyword = 45,
        SealedKeyword = 46,
        InlineKeyword = 47,
        ConstKeyword = 48,
        StaticKeyword = 49,
        ThisKeyword = 50,
        BaseKeyword = 51,
        InKeyword = 52,
        OutKeyword = 53,
        NullKeyword = 54,
        BreakKeyword = 55,
        NextKeyword = 56,
        DoKeyword = 57,
        Identifier = 58, // identifier
        Whitespace = 59,
        Integer = 60, // integer numbers
        RArrow = 61,
        Dot = 62,
        RParen = 63,
        LParen = 64,
        RBrackets = 65,
        LBrackets = 66,
        RBraces = 67,
        LBraces = 68,
        Comma = 69,
        AndAnd = 70,
        AndEquals = 71,
        And = 72,
        BarBar = 73,
        BarEquals = 74,
        Bar = 75,
        PercentEquals = 76,
        Percent = 77,
        CaretEquals = 78,
        Caret = 79,
        TildeEquals = 80,
        Tilde = 81,
        NotEquals = 82,
        Not = 83,
        EqualsEquals = 84, // == sign
        RightShift = 85,
        GreaterThanOrEquals = 86,
        GreaterThan = 87,
        LeftShift = 88,
        LessThanOrEquals = 89,
        LessThan = 90,
        Equals = 91, // equals sign
        PlusPlus = 92,
        PlusEquals = 93,
        Plus = 94, // addition sign
        MinusMinus = 95,
        MinusEquals = 96,
        Minus = 97, // minus sign
        AsteriskEquals = 98,
        Asterisk = 99, // asterisk sign
        SlashEquals = 100,
        Slash = 101, // slash sign
        YieldKeyword = 102,
        OperatorKeyword = 103,
        HashKeyword = 104,
        AssertKeyword = 105,
        ThrowKeyword = 106,
        InvariantKeyword = 107
    }

    #endregion
}
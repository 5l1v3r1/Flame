using System;
using System.Collections.Generic;
using System.Text;
using Flame.Build;
using Flame.Compiler;
using Flame.DSharp;
using Flame.DSharp.Build;
using Flame.DSharp.Lexer;

namespace Flame.Syntax.DSharp
{
    public class GenericParameterDeclarationSyntax : IGenericParameterDeclarationSyntax, ISourceSyntax
    {
        public const this(set [Token] ModifierTokens, set Token NameToken);

        public [Token] ModifierTokens { const get; private set; }
        public Token NameToken { const get; private set; }
        public string Name
        {
            const get
            {
                return NameToken.TokenValue;
            }
        }

        public SourceLocation Location
        {
            const get
            {
                var result = NameToken.Location;
                foreach (var item in ModifierTokens)
                {
                    result = result.Concat(item.Location);
                }
                return result;
            }
        }

        public IGenericParameterBuilder GetGenericParameter(IGenericMember DeclaringMember)
        {
            return new SyntaxGenericParameter(DeclaringMember, this);
        }

        public const CodeBuilder GetCode()
        {
            CodeBuilder cb = new CodeBuilder();
            foreach (var item in ModifierTokens)
            {
                cb.Append(item.ToString());
            }
            cb.Append(NameToken.ToString());
            return cb;
        }
    }
}

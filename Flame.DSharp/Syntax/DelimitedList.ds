using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Flame.Compiler;
using Flame.DSharp.Lexer;

namespace Flame.Syntax.DSharp
{
	public class DelimitedList<T> : IRelevantSyntax<Token>, ISyntaxNode, ISourceSyntax
		where T : ISyntaxNode
	{
		public const this(set Token LeftDelimiter, set SeparatedList<T> Items, set Token RightDelimiter);
		
		public Token LeftDelimiter { const get; private set; }
		public SeparatedList<T> Items { const get; private set; }
		public Token RightDelimiter { const get; private set; }
		
		public SourceLocation Location
		{
			const get
			{
				return LeftDelimiter.Location.Concat(Items.Location).Concat(RightDelimiter.Location);
			}
		}
		
		public int Count { const get return Items.Count; }
		
		public T this[int Index]
		{
			const get return Items[Index];
		}
		
		public [Token] LeadingTrivia
		{
			const get
			{
				return Enumerable.Concat<Token>(LeftDelimiter.GetAllTrivia(), Items.LeadingTrivia);
			}
		}
		
		public [Token] TrailingTrivia
		{
			const get return Enumerable.Empty<Token>();
		}
		
		public CodeBuilder GetCode()
		{
			CodeBuilder cb = new CodeBuilder();
			cb.Append(LeftDelimiter.ToString());
			cb.Append(Items.GetCode());
			cb.Append(RightDelimiter.ToString());
			return cb;
		}
	}
}
using System;
using System.Collections.Generic;
using Flame.Compiler;
using Flame.Compiler.Statements;
using Flame.Compiler.Expressions;
using Flame.DSharp.Lexer;

namespace Flame.Syntax.DSharp
{
    public class ExpressionStatementSyntax : LineStatementSyntax, ITokenNode
    {
        public const this(set IExpressionSyntax Expression);
        public const this(set IExpressionSyntax Expression, set Token SemicolonToken);

        public IExpressionSyntax Expression { const get; private set; }
        
        public IReadOnlyList<Token> Tokens
        {
        	const get
        	{
        		List<Token> tokens = new List<Token>();
				tokens.AddRange(Expression.GetTokens());
				tokens.Add(SemicolonToken);
				return tokens;
        	}
        }

        public override IStatement CreateStatement(ISyntaxState State)
        {
            return new ExpressionStatement(Expression.CreateExpression(State));
        }

        protected override CodeBuilder GetStatementCode()
        {
            return Expression.GetCode();
        }
    }
}
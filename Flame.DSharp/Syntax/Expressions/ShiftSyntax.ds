using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler;
using Flame.Compiler.Expressions;
using Flame.DSharp.Lexer;

namespace Flame.Syntax.DSharp
{
    public class LeftShiftSyntax : BinaryExpressionSyntax
    {
        public const this(set IExpressionSyntax Left, set Token OperatorToken, set IExpressionSyntax Right);

        protected override const IExpression CreateExpression(ISyntaxState State, IExpressionSyntax Left, Token Operator, IExpressionSyntax Right)
        {
            return new LeftShiftExpression(Left.CreateVerifiedExpression(State), Right.CreateVerifiedExpression(State));
        }
    }
    
    public class RightShiftSyntax : BinaryExpressionSyntax
    {
        public const this(set IExpressionSyntax Left, set Token OperatorToken, set IExpressionSyntax Right);

        protected override const IExpression CreateExpression(ISyntaxState State, IExpressionSyntax Left, Token Operator, IExpressionSyntax Right)
        {
            return new RightShiftExpression(Left.CreateVerifiedExpression(State), Right.CreateVerifiedExpression(State));
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using Flame.Compiler;

namespace Flame.Syntax
{
    /// <summary>
    /// Defines a common interface for objects that parse textual documentation
    /// and return description attributes.
    /// </summary>
    public interface IDocumentationParser
    {
        /// <summary>
        /// Parses the given textual documentation into description attributes.
        /// </summary>
        const [IAttribute] Parse(string Documentation, SourceLocation Location, ICompilerLog Log);
    }

    /// <summary>
    /// A documentation parser that does not really parse anything: it always
    /// returns an empty sequence.
    /// </summary>
    public static class EmptyDocumentationParser : IDocumentationParser
    {
        public const [IAttribute] Parse(string Documentation, SourceLocation Location, ICompilerLog Log)
        {
            return Enumerable.Empty<IAttribute>();
        }
    }

    public static class DocumentationParserExtensions
    {
        public static const IDocumentationParser GetDocumentationParser(this ICompilerOptions Options)
        {
            return Options.GetOption<IDocumentationParser>("docs-format", EmptyDocumentationParser);
        }

        public static const IDocumentationParser GetDocumentationParser(this ICompilerLog Log)
        {
            return Log.Options.GetDocumentationParser();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Text;

namespace Flame.Attributes
{
	public class ConstructedAttribute : IConstructedAttribute
	{
		public const this(set IMethod Constructor, set IEnumerable<IBoundObject> ConstructorArguments);
	
		public IMethod Constructor { const get; private set; }
		public IEnumerable<IBoundObject> ConstructorArguments { const get; private set; }

		/// <summary>
		/// Gets the arguments that were passed to the attribute constructor.
		/// </summary>
		/// <returns></returns>
		public const IEnumerable<IBoundObject> GetArguments()
		{
			return ConstructorArguments;
		}
		
		/// <summary>
        /// Gets the attribute's type.
        /// </summary>
        public IType AttributeType 
        { 
        	const get
        	{
        		return Constructor.DeclaringType;
        	}
        }
        /// <summary>
        /// Gets the attribute's value.
        /// </summary>
        public IBoundObject Value 
        {
        	const get
        	{
        		return Constructor.Invoke(null, ConstructorArguments);
        	}
        }
	}
}
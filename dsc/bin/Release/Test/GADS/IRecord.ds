/// <summary>
/// Describes a generic record.
/// </summary>
public interface IRecord<T>
{
    /// <summary>
    /// Gets the record's search key.
    /// </summary>
    T Key { const get; }
}

/// <summary>
/// Describes a map, an object that maps source values to their target representation.
/// It is essentially a pure mathematical function.
/// </summary>
/// <remarks>
/// This is mainly intended for use in sorting and dictionary purposes, where records are mapped to their keys.
/// </remarks>
public interface IMap<in TSource, out TTarget>
{
    /// <summary>
    /// Maps the item to its target representation.
    /// </summary>
    /// <post>
    /// This function must produce a constant return value, irrespective of external changes.
    /// </post>
    const TTarget Map(TSource Item);
}
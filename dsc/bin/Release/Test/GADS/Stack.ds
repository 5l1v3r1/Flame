/// <summary>
/// Represents a generic stack.
/// </summary>
public class Stack<T> : IReadOnlyCollection<T>
{ 
    public const this() dataContainer = new LinkedList<T>();
    public const this(set IList<T> dataContainer);

    private IList<T> dataContainer;

    /// <summary>
    /// Pushes an item on the stack.
    /// </summary>
    public void Push(T Item)
    {
        dataContainer.Insert(0, Item);
    }
    
    /// <summary>
    /// Gets the number of items on the stack.
    /// </summary>
    public int Count { const get return dataContainer.Count; }
    
    /// <summary>
    /// Peeks at the item at the top of the stack, without removing it.
    /// </summary>
    public const T Peek()
    {
        return dataContainer[0];
    }
    
    /// <summary>
    /// Pops the item at the top of the stack.
    /// </summary>
    public T Pop()
    {
        var value = dataContainer[0];
        dataContainer.RemoveAt(0);
        return value;
    }
}
using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler;
using Flame.Compiler.Statements;
using Flame.Compiler.Expressions;
using Flame.DSharp.Lexer;

namespace Flame.Syntax.DSharp
{
	public class NextSyntax : LineStatementSyntax, ITokenNode
    {
        public const this()
        {
            this.NextKeyword = new Token(TokenType.NextKeyword, "next");
        }
        public const this(set Token NextKeyword, set Token SemicolonToken);

        public Token NextKeyword { const get; private set; }
        
        public IReadOnlyList<Token> Tokens
        {
        	const get return (IReadOnlyList<Token>)new Token[] { NextKeyword, SemicolonToken };
        }

        public override IStatement CreateStatement(ISyntaxState State)
        {
            return new ContinueStatement();
        }

        protected override CodeBuilder GetStatementCode()
        {
            CodeBuilder cb = new CodeBuilder();
            cb.Append(NextKeyword.TokenValue);
            return cb;
        }
    }
}
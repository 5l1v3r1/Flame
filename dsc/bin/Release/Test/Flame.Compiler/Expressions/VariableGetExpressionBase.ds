using System;
using System.Collections.Generic;
using Flame.Compiler.Variables;
using Flame.Compiler.Statements;

namespace Flame.Compiler.Expressions
{
    public abstract class VariableGetExpressionBase<T> : IExpression, IVariableNode where T : IVariable
    {
    	public const this();
    	public const this(set T Variable);
        
        public T Variable { const get; protected set; }
        
        public const IVariable GetVariable() : IVariableNode.GetVariable
        {
        	return Variable;
        }

        public virtual IType Type
        {
            const get { return Variable.Type; }
        }

        public virtual bool IsConstant
        {
            const get { return false; }
        }

        public virtual const IBoundObject Evaluate()
        {
            return null;
        }

        public virtual IExpression Optimize()
        {
            return this;
        }
        
        public abstract const ICodeBlock Emit(ICodeGenerator CodeGenerator);
    }
}
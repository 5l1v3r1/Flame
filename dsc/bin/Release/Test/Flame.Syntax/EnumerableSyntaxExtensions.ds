using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Flame.Compiler;

namespace Flame.Syntax
{
	public static class EnumerableSyntaxExtensions
	{
		public static IEnumerable<IExpression> CreateExpressions(this IEnumerable<IExpressionSyntax> Syntax, ISyntaxState State)
		{
			List<IExpression> exprs = new List<IExpression>();
			foreach (var item in Syntax)
			{
				exprs.Add(item.CreateExpression(State));
			}
			return exprs;
		}
		
		public static IEnumerable<IExpression> CreateVerifiedExpressions(this IEnumerable<IExpressionSyntax> Syntax, ISyntaxState State)
		{
			List<IExpression> exprs = new List<IExpression>();
			foreach (var item in Syntax)
			{
				exprs.Add(item.CreateVerifiedExpression(State));
			}
			return exprs;
		}
		
		public static IEnumerable<IType> CreateVerifiedTypes(this IEnumerable<ITypeSyntax> Syntax, ISyntaxState State)
		{
			List<IType> exprs = new List<IType>();
			foreach (var item in Syntax)
			{
				exprs.Add(item.CreateVerifiedType(State));
			}
			return exprs;
		}
	}
}